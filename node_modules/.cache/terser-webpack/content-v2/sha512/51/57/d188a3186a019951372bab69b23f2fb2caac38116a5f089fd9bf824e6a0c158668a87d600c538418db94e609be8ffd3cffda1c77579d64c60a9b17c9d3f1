{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{\"+2g3\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"KEYBOARD_DID_CLOSE\",(function(){return KEYBOARD_DID_CLOSE})),__webpack_require__.d(__webpack_exports__,\"KEYBOARD_DID_OPEN\",(function(){return KEYBOARD_DID_OPEN})),__webpack_require__.d(__webpack_exports__,\"copyLayoutViewport\",(function(){return copyLayoutViewport})),__webpack_require__.d(__webpack_exports__,\"copyVisualViewport\",(function(){return copyVisualViewport})),__webpack_require__.d(__webpack_exports__,\"keyboardDidClose\",(function(){return keyboardDidClose})),__webpack_require__.d(__webpack_exports__,\"keyboardDidOpen\",(function(){return keyboardDidOpen})),__webpack_require__.d(__webpack_exports__,\"keyboardDidResize\",(function(){return keyboardDidResize})),__webpack_require__.d(__webpack_exports__,\"resetKeyboardAssist\",(function(){return resetKeyboardAssist})),__webpack_require__.d(__webpack_exports__,\"setKeyboardClose\",(function(){return setKeyboardClose})),__webpack_require__.d(__webpack_exports__,\"setKeyboardOpen\",(function(){return setKeyboardOpen})),__webpack_require__.d(__webpack_exports__,\"startKeyboardAssist\",(function(){return startKeyboardAssist})),__webpack_require__.d(__webpack_exports__,\"trackViewportChanges\",(function(){return trackViewportChanges}));const KEYBOARD_DID_OPEN=\"ionKeyboardDidShow\",KEYBOARD_DID_CLOSE=\"ionKeyboardDidHide\";let previousVisualViewport={},currentVisualViewport={},previousLayoutViewport={},currentLayoutViewport={},keyboardOpen=!1;const resetKeyboardAssist=()=>{previousVisualViewport={},currentVisualViewport={},previousLayoutViewport={},currentLayoutViewport={},keyboardOpen=!1},startKeyboardAssist=win=>{startNativeListeners(win),win.visualViewport&&(currentVisualViewport=copyVisualViewport(win.visualViewport),currentLayoutViewport=copyLayoutViewport(win),win.visualViewport.onresize=()=>{trackViewportChanges(win),keyboardDidOpen()||keyboardDidResize(win)?setKeyboardOpen(win):keyboardDidClose(win)&&setKeyboardClose(win)})},startNativeListeners=win=>{win.addEventListener(\"keyboardDidShow\",ev=>setKeyboardOpen(win,ev)),win.addEventListener(\"keyboardDidHide\",()=>setKeyboardClose(win))},setKeyboardOpen=(win,ev)=>{fireKeyboardOpenEvent(win,ev),keyboardOpen=!0},setKeyboardClose=win=>{fireKeyboardCloseEvent(win),keyboardOpen=!1},keyboardDidOpen=()=>!keyboardOpen&&previousVisualViewport.width===currentVisualViewport.width&&(previousVisualViewport.height-currentVisualViewport.height)*currentVisualViewport.scale>150&&!layoutViewportDidChange(),keyboardDidResize=win=>keyboardOpen&&!keyboardDidClose(win),keyboardDidClose=win=>keyboardOpen&&currentVisualViewport.height===win.innerHeight,layoutViewportDidChange=()=>currentLayoutViewport.width!==previousLayoutViewport.width||currentLayoutViewport.height!==previousLayoutViewport.height,fireKeyboardOpenEvent=(win,nativeEv)=>{const ev=new CustomEvent(KEYBOARD_DID_OPEN,{detail:{keyboardHeight:nativeEv?nativeEv.keyboardHeight:win.innerHeight-currentVisualViewport.height}});win.dispatchEvent(ev)},fireKeyboardCloseEvent=win=>{const ev=new CustomEvent(KEYBOARD_DID_CLOSE);win.dispatchEvent(ev)},trackViewportChanges=win=>{previousVisualViewport=Object.assign({},currentVisualViewport),currentVisualViewport=copyVisualViewport(win.visualViewport),previousLayoutViewport=Object.assign({},currentLayoutViewport),currentLayoutViewport=copyLayoutViewport(win)},copyVisualViewport=visualViewport=>({width:Math.round(visualViewport.width),height:Math.round(visualViewport.height),offsetTop:visualViewport.offsetTop,offsetLeft:visualViewport.offsetLeft,pageTop:visualViewport.pageTop,pageLeft:visualViewport.pageLeft,scale:visualViewport.scale}),copyLayoutViewport=win=>({width:win.innerWidth,height:win.innerHeight})}}]);","extractedComments":[]}